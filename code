// Segment pins: A-G â†’ D2-D8
int segmentPins[] = {2, 3, 4, 5, 6, 7, 8};
// Digit control pins (COM pins for 3 displays)
int digitPins[] = {A2, A1, A0}; // Hundreds, Tens, Units

// Digit to 7-segment map
byte digits[10][7] = {
  {1,1,1,1,1,1,0}, // 0
  {0,1,1,0,0,0,0}, // 1
  {1,1,0,1,1,0,1}, // 2
  {1,1,1,1,0,0,1}, // 3
  {0,1,1,0,0,1,1}, // 4
  {1,0,1,1,0,1,1}, // 5
  {1,0,1,1,1,1,1}, // 6
  {1,1,1,0,0,0,0}, // 7
  {1,1,1,1,1,1,1}, // 8
  {1,1,1,1,0,1,1}  // 9
};

void setup() {
  for (int i = 0; i < 7; i++) {
    pinMode(segmentPins[i], OUTPUT);
  }
  for (int i = 0; i < 3; i++) {
    pinMode(digitPins[i], OUTPUT);
  }
}

void loop() {
  for (int i = 0; i <= 150; i++) {
    unsigned long startTime = millis();
    while (millis() - startTime < 250) { // Show number for 0.5 second
      displayNumber(i);
    }
  }
}

void displayNumber(int number) {
  int hundreds = number / 100;
  int tens = (number / 10) % 10;
  int units = number % 10;

  showDigit(hundreds, 0);
  delay(1);
  showDigit(tens, 1);
  delay(1);
  showDigit(units, 2);
  delay(1);
}

void showDigit(int num, int position) {
  for (int i = 0; i < 3; i++) {
    digitalWrite(digitPins[i], HIGH); // Turn off all displays
  }

  for (int i = 0; i < 7; i++) {
    digitalWrite(segmentPins[i], digits[num][i]);
  }

  digitalWrite(digitPins[position], LOW); // Turn on selected digit
}
